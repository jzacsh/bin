#!/usr/bin/env bash

if (( $# > 1 )) && [[ $1 = '-s' ]];then
    USE_STDOUT=1
    shift;
fi

WATCH="${1:-$HOME/pub/drop}"
INOTIFY='http://github.com/rvoicilas/inotify-tools'
LIBNOTIFY='http://www.galago-project.org'
depends=(inotifywait notify-send)
HEADER="Someone Just Touched: $WATCH"

usage() {
    echo -e "
    Continuously watch a file (or directory) and notify you of changes using
    using libnotify. You most likely will want to background this process and
    run it as a daemon.

    usage: $(basename $0) [-s] [file_name ...]
        where file_name is the name of a dile or directory you'd like to be
        notified of changes to.

        -s  Indicates that messages should be printed to stdout instead of the
            default notify-send(1).

        eg.: \`$(basename $0) ~/pub/drop\`

    NOTE:
        Multiple filename arguments has not been tested with this script.
        See: notify-send(1) $INOTIFY
        See: inotifywait(1) $LIBNOTIFY
    " >&2
    exit 2
}

dependency() {
    echo -e "'$1' not found.\nPlease install all dependencies to this script." >&2
    usage
    exit 3
}

#for friends who don't like reading source code:
if [[ $1 = '--help' || $1 = '-h' ]];then
    usage
fi

#for the same friends
for util in ${depends[@]}; do
    if (( USE_STDOUT )) && [[ $util = 'notify-send' ]]; then
        continue;
    fi
    type -p "$util" >&/dev/null || dependency "$util"
done


# if inotifywait is passed a non-existent directory,
# it goes into a monsterous infinate loop instead of failing.
if [[ -r $WATCH ]];then
    recurse='--recursive'
else
    echo "Error: cannot find '$WATCH' in filesystem" >&2
    exit 3
fi

iwait() {
    inotifywait \
        --recursive \
        --monitor \
        --timefmt='%H:%M:%S' \
        --format='%T (%e) | "%f"' \
        --event delete \
        --event move \
        --event create \
        --event modify \
        "$WATCH"
}

# the actual magic:
if (( USE_STDOUT ));then
    iwait
else
    while read -r message; do
        notify-send "$message"
    done < <(iwait)
fi

# vim: et:sw=4:ts=4
