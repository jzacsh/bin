#!/bin/bash
 #@TODO: use this! #!/usr/bin/env bash

# also configurable via environement variables.
PUNCH_CARD=${PUNCH_CARD:-"~/.config/punchcard"}
PUNCH_DELIM=${PUNCH_DELIM:-'|'}

# change default conf above this line. ########################################
###############################################################################

E_ERROR=1
E_USAGE=64

# getops conf: ################################################################
#@TODO:
# use getopts
#OPTS=(abcd)
declare -A OPTS
OPTS=(
    [c:]="name  Punch in/out on for a client/project of 'name'."
    [d]="delete a time-card entry."
    [l]="list time-card entries."
)
getopts "$(for opt in ${!OPTS[@]}; do echo -n $opt ;done)" OPT

# functions: ##################################################################
die() {
    exit ${1:-$E_ERROR}
}

help() {
    usage
    #@TODO:
    ## use an associative array with OPTS and store an explanation of
    #each getopts
    # arg, loop through and print it here.

    #build the help sectoin
    declare -a HELP
    local i=0
    IFS=\0; for opt in ${!OPTS[@]}; do
        HELP[$i]=${opt/:/}
        ((++i))
    done
    i=0
    IFS=\0; for opt in ${OPTS[@]}; do
        HELP[$i]="-${HELP[$i]}\t${opt}"
        ((++i))
    done

    #print help section
    echo "\
    Help Section:" >&2
    for help in ${HELP[@]}; do
        echo -e "\t$help" >&2
    done

    die ${@}
}

usage() {
    local _n=$(basename $0)
    local flags=$(
        for opt in ${!OPTS[@]}; do
            [[ ${opt:1:1} = : ]] || echo -n $opt
        done
    )
    local i n
    local argflags=$(
        i=0
        for opt in ${!OPTS[@]}; do
            if [[ ${opt:1:1} = : ]];then
                echo -en "-${opt/:/} "
                n=0
                local boop=$IFS
                IFS=\0; for arg in ${OPTS[@]}; do
                    if (( n == i ));then
                        echo -en "${arg%% *}"
                        break;
                    fi
                    ((++n))
                done
                IFS=$boop
            fi
            ((++i))
        done
    )

    echo "$_n [$flags] [ $argflags [note...] ]
    Simple time card utility, letting you punch in, out and get paid.

    ${_n^} generally takes a client/subject of what you're working *for* and
    optionaly a quick note of what you're working *on*, then stores a timestamp
    on your local punch-card.

    Called with no arguments ${_n^} prints your current time on the clock.
    See -h/--help for more.
" >&2

    (( $# )) && die ${@}
}

# logic: ######################################################################

#@TODO:
## make no-arg print of current time.
# make an option to have a clean print in epoch syntax


#@TODO: remove this testing line!
(( $# )) && help 99 || usage 89
