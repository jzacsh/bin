#!/bin/bash

# also configurable via environement variables.
PUNCH_CARD=${PUNCH_CARD:-"~/.config/punchcard"}
PUNCH_DELIM=${PUNCH_DELIM:-'|'}

# change default conf above this line. ########################################
###############################################################################

E_ERROR=1
E_USAGE=64

# getops conf: ################################################################
#@TODO:
# use getopts
#OPTS=(abcd)
declare -A OPTS

# functions: ##################################################################
die() {
    exit ${1:-$E_ERROR}
}

help() {
    usage
#@TODO:
## use an associative array with OPTS and store an explanation of each getopts
# arg, loop through and print it here.
    die
}

usage() {
    local _n=$(basename $0)

    echo "$_n - a time card utility. Punch in, out, get paid.

    $_n [$(for opt in ${OPTS[@]}; do echo -n $opt; done)] [note...]

    $_n generally takes a note of what you're currently working on and stores
    that with a timestamp in your config file. Called with no arguments $_n
    prints your current time on the clock.
" >&2

    (( $? )) && die ${@}
}

# logic: ######################################################################

#@TODO:
## make no-arg print of current time.
# make an option to have a clean print in epoch syntax


OPTS=([a]="punch in/out" [l]="list punches" [d]="delete a punch")
declare -a HELP
i=0
IFS=\0; for opt in ${!OPTS[@]}; do
    HELP[$i]=$opt
    ((++i))
done
i=0
IFS=\0; for opt in ${OPTS[@]}; do
    HELP[$i]="${HELP[$i]} - ${opt}"
    ((++i))
done

for help in ${HELP[@]}; do echo $help ;done
die 99
