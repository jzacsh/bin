#!/usr/bin/env bash

# pull latest code into $1

LOCAL="$1"

_n=$(basename $0)
now='date --rfc-3339=seconds'

printf '\n[%s] | STARTED "%s".\n' "$($now)" "${_n,,}"

die() {
  printf '[%s] | FINISHED "%s".\n\n' "$($now)" "${_n,,}"
  exit "$1"
}

usage() {
  printf '
  usage:
    %s <local_dir>

  summary:
    git-pull(1) the latest code for repository at local directory,
    <local_dir>.\n' "${_n,,}" >&2
}

#log success
log_s() {
  if [[ "$before" != "$after" ]];then
    printf '%s | %s updated from ref %s to %s\n' \
      "$($now)" "$LOCAL" "$before" "$after"
  fi
}

#log failure
log_f() {
  printf 'Failed to update %s\n.' "$LOCAL" >&2
}

# sanity checks
if (( $# != 1 )) || [[ $1 = -h || $1 = --help ]];then
  usage
  die 1
elif (( "${BASH_VERSINFO[0]}" != 4 ));then
  printf '%s requires bash version 4 or greater.\n' "${_n,,}" >&2
  die 1
elif ! type -p git >& /dev/null;then
  printf 'git(1) not installed (or not in path).\n' >&2
  die 1
elif [[ ! -w "$LOCAL/.git/" ]];then
  printf 'Directory "%s" is not a readable git repository.\n' "$LOCAL" >&2
  die 1
fi

reff=$(< "$LOCAL/.git/HEAD")
reff="${LOCAL}/.git/${reff/*: /}"
before=$(< "$reff")
cd "$LOCAL" && git pull
git_return="$?"
after=$(< "$reff")

(( git_return )) && log_f || log_s

die "$git_return"

