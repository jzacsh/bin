#!/usr/bin/env bash
#
# Like `who` on my machine, but on my LAN instead
set -euo pipefail

haveExec() ( type "$1" >/dev/null 2>&1; )

haveExec arp-scan || {
  printf 'Error: must have arp-scan installed\n' >&2
  exit 1
}

[ "$EUID" = 0 ] || {
  printf 'Error: must be run as root\n' >&2
  exit 1
}

myFirstQuad="$(
  if haveExec nmcli;then
    while read device type state connection; do
      [ "$state" = connected ] || continue
      ip -4 -oneline address |
        grep -E '^[[:digit:]]*:[[:space:]]*'"$device" |
        while IFS=' ' read number dev family addr _; do
          echo "${addr:0:3}"
        done
    done < <(nmcli --colors no device | sed 1d | grep connected)
  else
    printf \
      'WARNING: cannot figure out first quad of your LAN, assuming 192!\n' >&2
    echo 192
  fi
)"; declare -r myFirstQuad

while read ip mac; do
  [ "${ip:0:3}" = "$myFirstQuad" ] || {
    echo "$ip" "$mac"
    continue; # not really ip/mac; just extra metadata we pass along
  }
  if host "$ip" > /dev/null 2>&1; then
    localName="$(host "$ip" | sed --expression \
      's|^.*domain[[:space:]]*name[[:space:]]*pointer[[:space:]]*||'
    )"
    printf '%s\t%s\n' "$ip" "$localName"
  else
    host "$ip" 2>&1 || true
  fi
done < <(arp-scan --quiet --localnet 2>&1)
