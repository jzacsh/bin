#!/usr/bin/env bash
#
# Tries to setup painless SSL localhost server
#
# To get chrome to trust a cert generated by this program, copy it somewhere
# Eg: ~/media/src/) and follow http://superuser.com/a/598608, IE:
# 1. $ sudo cp -a ${TMPDIR:-/tmp/}/localdev_*_server.* ~/media/src/ # maybe better names
# 2. click red SSL icon, "export..." key, eg: ~/media/src/localdev.pem
# 3. $ certutil -d sql:$HOME/.pki/nssdb -A -t P \
#     -n mylocaldevcert -i ~/media/src/localdev.pem # path from step 2
# 4. Restart Browser
# 5. Future calls to this script, point to ~/media/src/localdev*.{cert,key}
#    files with -C and -K params respectively
set -euo pipefail

type http-server >/dev/null 2>&1 || {
  printf 'Error: expected `http-server` installed
  See `npm show http-server` for more'. >&2
  exit 1
}

if printf '%s\n' $@ | grep -E -- '-(-(cert|key)|(C|K))' >/dev/null 2>&1; then
  http-server $@ --ssl
  exit $?
fi

declare -A tempFiles=()
cleanupTemps() (
  printf 'Cleaning up temp files; ' >&2
  for f in "${tempFiles[@]}";do
    if [[ -e "$f" ]] && [[ -n "${f/ */}" ]]; then rm -f "$f";fi
    printf '.'
  done
  printf ' DONE.\n' >&2
)
trap cleanupTemps EXIT

tempFiles[serverCert]="$(mktemp --tmpdir  localdev_XXXXX_server.cert)"
tempFiles[serverKey]="$(mktemp --tmpdir  localdev_XXXXX_server.key)"

# taken from http://superuser.com/a/226229
openssl req \
    -new \
    -newkey rsa:4096 \
    -days 365 \
    -nodes \
    -x509 \
    -subj "/C=US/ST=Denial/L=Springfield/O=Dis/CN=$(hostname)" \
    -keyout "${tempFiles[serverKey]}" \
    -out "${tempFiles[serverCert]}" 

http-server $@ \
  --ssl \
  --cert "${tempFiles[serverCert]}"  \
  --key "${tempFiles[serverKey]}"
