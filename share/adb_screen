#!/usr/bin/env bash
#
# Thin wrapper `adb screencap`. Roughly does:
#   f=`mktemp`; adb screencap /sdcard/shot.png && adb pull /sdcard/shot.png $f
set -euo pipefail

declare -r thisScript="$(basename "$(readlink -f "${BASH_SOURCE[0]}")")"
{ (( $# == 1 )) && { [ "$1" = cap ] || [ "$1" = record ]; }; } || {
  printf \
    'usage: `%s cap|record`\n\tEither records video or takes a screenshot\n' \
    "$thisScript" >&2
  exit 1
}

adbCommand=s"creen${1}"
if [ "$1" = cap ];then
  declare -r onceRunInstruction='Please wait...'
  declare -r defaultOndisk=/sdcard/screenshot.png
elif [ "$1" = record ];then
  declare -r onceRunInstruction='^C to finish'
  declare -r defaultOndisk=/sdcard/recording.mp4
fi


pullFromDevice() (
  local tmpl localFile
  tmpl="$(
    printf 'adb-shell-%s_%s_XXXXXX.%s' \
      "$adbCommand" \
      "$(date --iso-8601=d)" \
      "${defaultOndisk/*./}"
  )"
  localFile="$(mktemp --tmpdir  "$tmpl")"

  (
    # adb shell "du $defaultOndisk" >&2 &&
    adb pull "$defaultOndisk" "$localFile" >/dev/null &&
      [ -e "$localFile" ] &&
      [ "$(stat "$localFile" --printf '%b')" != 0 ]
  ) || (
    rm "$localFile" 2>/dev/null # clear empty files
    return
  )

  printf '%s\n' "$localFile"

  #TODO uncomment this when we can reliable do our `adb pull` above ^, as of
  #now, we fail to transfer every byte as expected.
  # adb shell rm "$defaultOndisk"
)

declare -r oldOutput="$(pullFromDevice)"
if [ -n "${oldOutput/ */}" ];then
  printf \
    'WARNING: old ouptut found on device & pulled first:\n\t%s\n' \
    "$oldOutput"
fi

finalPullFromDevice() (
  set +x
  local offDevice; offDevice="$(pullFromDevice)"
  if [ -n "${offDevice/ */}" ];then
    printf \
      '%s:\n\t$ adb pull %s %s &&\n\t    adb shell "rm -v %s"\n' \
      'Success; Fetch a copy by running' \
      "$defaultOndisk" "$offDevice" "$defaultOndisk"
    return 0
  else
    printf \
      'Error: %s failed\n\tmaybe poke around w/`adb`, you like: %s\n' \
      "$adbCommand" "$defaultOndisk" >&2
    return 1
  fi
)
trap finalPullFromDevice EXIT


printf 'RUNNING %s now; %s\n' "$adbCommand" "$onceRunInstruction"
command="$adbCommand"; if [ "$1" = record ];then command+=" --verbose";fi
set -x; adb shell "$command" "$defaultOndisk"
exit 0
