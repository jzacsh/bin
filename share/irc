#!/usr/bin/env bash
#
# Call IRSSI, but stop me if my config is out of date, first.
#
#   Note this is purposely a script and not a shell function, as I want `tmux`
#   to execute *this* logic for me when it reloads from saved sessions.

set -e
declare -r latest=~/.irssi/config.default
declare -r current=~/.irssi/config

declare -A clr=(
  [end]='\033[0m'
  [blk]='\e[0;30m'
  [red]='\e[1;31m'
  [grn]='\e[1;32m'
  [ylw]='\e[1;33m'
  [blu]='\e[1;34m'
  [wht]='\e[0;37m'
)
col() { _clr=$1; shift; echo -en "${clr[$_clr]}$@${clr[end]}"; }

cmpr() {
  local diffExec=diff
  if type colordiff >/dev/null 2>&1;then diffExec=colordiff;fi

  "$diffExec" --unified --show-c-function \
    <(\grep --invert-match password "$latest") \
    <(\grep --invert-match password "$current");
}
if ! cmpr > /dev/null 2>&1; then
  {
    printf \
      '\n%s:    irssi config differs from your dotfiles in "%s"\n\n' \
      "$(col ylw WARNING)" \
      "\$$(printf "$latest" | sed -e "s|$HOME|HOME|")"
    cmpr;
  } | "${PAGER:-less}"
  echo; read -p "Run irssi with $(col red old config) anyway? [yN] " answer
  ans="${answer,,}"; ans="${ans:0:1}"
  if [ "$ans" != y ];then
    printf \
      '\n%s %s, run `%s` again when fixed\n' \
      "$(col grn GREAT)" \
      'giving you your shell back' \
      "$(basename "$(readlink -f "${BASH_SOURCE[0]}")")" >&2
    exit 1
  fi
fi

irssi
