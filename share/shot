#!/usr/bin/env bash

_n="$(basename $0)"

P="${1}"
ENC="${SHOT_ENC}"
PUB="${SHOT_PUB}" #dropbox-specific dir.
unique="$(date +%s 2>/dev/null || uuidgen)"

usage() {
  printf "
  USAGE:
    %s [PATH]

    For [PATH] you can pass an image encoding type, a full file path (with
    encoding extension), or a file name prefix (a default extension will be
    used).

  SUMMARY:
    Take a screenshot, using the import(1) utility, of a selected area.

    Dropbox Public-Link Magic
      If no [PATH] argument is passed and Dropbox is installed, %s attempts to
      makes its default write-location your Dropbox Public/ folder, so that it
      can print a helful puburl link for you to shrae with others.

  ENVIRONMENT
    SHOT_ENC
      The file type extension of the image encoding you'd like import(1) to
      write your screenshot in.
      ( currently: %s )

    SHOT_DBX
      %s will look for a Dropbox directory in the following ways, in this
      order:
      1) ~/Dropbox/
      2) SHOT_DBX environment variable, use this if you're using a non-standard
      setup or find that this utility doesn't find Dropbox otherwise.
      ( currently: %s )
      3) In ~/.dropbox/config.db, where dropbox internally stores its
      configuration.

    SHOT_PUB
      If [PATH] is not provided and you have a Dropbox installation with the
      standard Public/ dir, use this to specify a sub directory to use within
      Public/
      ( currently: %s )

    SHOT_UPLOAD
      The uploader utility that should be passed the screenshot's filepath as
      an argument (eg.: ompldr, imgur scripts or something homemade).
      ( currently: %s )
  \n" \
  "${_n/,,/}" \
  "${_n/,,/}" \
  "${SHOT_ENC:-not set}" \
  "${_n/,,/}" \
  "${SHOT_DBX:-not set}" \
  "${SHOT_PUB:-not set}" \
  "${SHOT_UPLOAD:-not set}" >&2
}

#sanity check
if [[ $1 = -h || $1 = --help ]];then
  usage
  exit
elif ! type -p import >& /dev/null;then
  echo 'Error: import(1) not found on your system.' >&2
  usage
  exit 1
fi

#figure out if we can use dropbox
dbox_path () {
  local path

  if [[ -d "${SHOT_DBX}" ]];then
    #this is a non-standard, or non-dropbox or otherwise hairy install, let
    # the user tell us
    path="${SHOT_DBX}"

    #try to use a sub dir
    if [[ -n "${SHOT_PUB}" ]];then
      #user-specified sub-dir is waiting
      path="${SHOT_DBX}"
    else
      #try to find our own sudir
      if [[ $(type -p dropbox 2> /dev/null) ]];then
        if [[ -d "${SHOT_DBX}/Public" ]];then
          #use Public/ (Dropbox utility's standard)
          path="${SHOT_DBX}/Public"
        fi
      fi

    fi
  fi

  #allow screenshots to accumulate out of site
  if [[ -d "$path" ]];then
    if [[ -d "${path}/${SHOT_PUB}" ]];then
      printf "%s" "${path}/${SHOT_PUB}"
    else
      printf "%s" "$path"
    fi
  fi
}

ftype=${ENC:-png}
fname="screenshot_${unique}.${ftype}" #default path
file="$fname"
if (( $# ));then
  # user passed a directory
  if [[ -d $P ]];then
    if [[ -w $P ]];then
      fname="${P}/${fname}"
    else
      printf 'Error: do not have write permission to "%s".\n' "$P" >&2
    fi
  else
    # we were given an extension or a file path

    len="${#P}"
    dot_idx=$((len - 4))
    if [[ "${P:$dot_idx:1}" = . ]];then
      #we were given a full file path
      ext=$((len - 3))
      ftype="${P:$ext}"
      fname="${P}"
    else
      #we were given a prefix filename
      fname="${P}.${ftype}"
    fi
  fi
else #Dropbox trick, hold off on default path
  dboxp=$(dbox_path)
  if [[ -n $dboxp ]];then
    #default path, but in dropbox Public/
    fname="${dboxp}/${fname}"
  fi
fi

#take the shot!
import -verbose -encoding "$ftype" "$fname"
size=10#$(stat -c %s "$fname")

#get the dropbox puburl if its DIR was used.
if (( size ));then
  if [[ $(type -p dropbox 2>/dev/null) ]];then
    dropbox puburl "$fname"
  elif [[ $(type "$SHOT_UPLOAD" 2>/dev/null) ]];then
    $SHOT_UPLOAD "${fname}"
  fi
fi

# vim: et:ts=2:sw=2
