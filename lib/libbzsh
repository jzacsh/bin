#!/usr/bin/env bash

# to use:######################################################################
# - run `source [thisfile]` at the top of your script
# - set these two variables to either nothing, or 1
#   - OPT_DB
#   - OPT_VB
###############################################################################

###############################################################################
# commonly used shell scripting functions
###############################################################################

#colors:
#TOOD: wrap this "color" block in if statement in case run to a log file
col_end='\033[0m' #cap
col_blk='\e[0;30m'
col_red='\e[1;31m'
col_grn='\e[1;32m'
col_ylw='\e[1;33m'
col_blu='\e[1;34m'
col_wht='\e[0;37m'

#these rely on OPT_DB and OPT_VB booleans
if_debug() { (( $OPT_DB > 0)) && return 0 || return 1; }
if_verbose() { (( $OPT_VB > 0)) && return 0 || return 1; }

printer() {
  echo -e "${col_grn}::${col_end} ${@}"
}

stamp() {
  printer "$(date --rfc-3339=seconds) ${col_ylw}::${col_end} ${@}"
}

warn() {
  if_verbose || return
  echo -e "${col_ylw}::${col_end} ${col_red}WARNING:${col_end} ${@}"
}

err() {
  echo -e "${col_ylw}::${col_end} ${col_red}ERROR:${col_end} ${@}" >&2
}

verb() {
  if_verbose || return
  echo -e "${col_ylw}::${col_end} ${@}"
}

dbg() {
  if_debug || return
  echo -e "${col_ylw}::${col_end} ${col_blu}DEBUG:${col_end} ${@}"
}

# vim: et:sw=2:ts=2
