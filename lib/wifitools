#!/usr/bin/env bash

# tools for setting up wireless in archlinux
eval $(grep WIRELESS_INTERFACE /etc/rc.conf)

wfreset() {
#   if (( $UID ));then
#       echo 'error: $_ requires elevated priveleges.' >&2
#       return 1
#   fi
    echo 'setting wireless config back to defaults...'
    declare -rA confs=(
        [freq]='auto'
        [rate]='auto'
        [ap]='any'
    )
    local i=0 n=0 config
    declare -a dots=(.)
    for conf in "${!confs[@]}"; do
        echo "... setting \`iwconfig $conf\` back to auto ... "
        n=0
        for setting in "${confs[@]}";do
            if (( n == i ));then
                config="$setting"
                break;
            fi
            (( ++n ))
        done
        sudo iwconfig "$WIRELESS_INTERFACE" "$conf" "$config" && echo 'Done.' || echo 'Failed.'
        (( ++i ))
    done
}

wfls() {
#   if (( $UID ));then
#       echo 'error: $_ requires elevated priveleges.' >&2
#       return 1
#   fi

    local fail=0

    if (( $# ));then
        if [[ "$1" != e && "$1" != p ]];then
            fail=1
        fi
    fi

    if (( fail ));then
        echo "
    usage [$FUNCNAME] [e | p]
        list broadcasted ESSIDs
        e  listing by encryption
        p  spill all available data to pager
        " >&2
        return 1
    fi

    local ret=$?
    if (( ret ));then
        echo 'failed to bring up your wireless device!' >&2
        return "$ret"
    else
        echo "printing available wifi networks:"
    fi

    if [[ "$1" = e ]];then
        #encryption table
        local cell=0
        sudo ifconfig wlan0 up
        while read stuff; do
            if (( cell == 2 ));then
                cell=0
                echo #readability
            fi
            echo "$stuff" | grep -i -e encryption -e essid
            (( $? )) || (( ++cell ))
        done < <(sudo iwlist wlan0 scan)
    else
        sudo ifconfig wlan0 up
        [[ "$1" = p ]] && local view="$PAGER" || local view='grep ESSID'
        sudo iwlist wlan0 scan | "$view"
    fi
}

wfon() {
#   if (( $UID ));then
#       echo 'error: $_ requires elevated priveleges.' >&2
#       return 1
#   fi

    (( $# )) || return 2
    echo "setting a wifi network... '$@'"
    if [[ "$1" = -a ]];then
        local attr='ap'
        shift
    else
        local attr='essid'
    fi
    sudo iwconfig wlan0 "$attr" "$@"
}

wfnp() {
#   if (( $UID ));then
#       echo 'error: $_ requires elevated priveleges.' >&2
#       return 1
#   fi

    echo "releasing ip..."
    sudo dhcpcd -k wlan0
}

wfip() {
#   if (( $UID ));then
#       echo 'error: $_ requires elevated priveleges.' >&2
#       return 1
#   fi

    if [[ "$1" = f ]]; then
        echo -en "\t"
        wfnp
    fi
    echo "requesting an IP from dhcpc server..."
    sudo dhcpcd wlan0
}

